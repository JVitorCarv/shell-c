Use case, Expected behavior
./shell commands1.txt, Execute up to 40 lines then terminate
./shell commands2.txt, Generate error message
./shell commands3.txt, Execute up to exit then terminate
Just press enter, Nothing happens
Press space multiple times then enter, Nothing happens
CTRL + D, Terminates shell
style then enter, Help print is displayed
style then single space and enter, Help print is displayed
style then multiple spaces and enter, Help print is displayed
ls a, Expects error
ls -a, Should display command output
/bin/ls; /bin/ps, Should display command output
ls -l | sort -k 5, Should display pipe result
ls -l | sort -k 5 | lol, Should display pipe result for only first two commands
|, Nothing happens
     |, Nothing happens
     |         , Nothing happens
ls -l |, Nothing happens
|    sort -k 5, Nothing happens
lol be like | hello, Both error messages are displayed
ls -l | lol be like, 2nd command error message is displayed
lol be like | sort -k 5, 1st command error message is displayed
ping -c 5 google.com | grep rtt; ls -l | sort -k 5; , Both are executed
ping -c 5 google.com | grep rtt; lol be like | sort -k 5, 1st command error message is displayed and 2nd executes
echo 1; echo 2; echo 3; echo 4; echo 5; echo 6; echo 7; echo 8; echo 9; echo 10;, Terminal should not terminate
ls -l> lol.txt; ls -l | sort -k 5; echo hello, All 3 should be executed
ls > lol.txt;, Should overwrite content in lol.txt
ps          >          lol.txt;, Should overwrite content in lol.txt
ls >;, nothing happens
ls > ;, file name must not be blank
ls >         ;, file name must not be blank
date >> datefile.txt;, Should append content to datefile.txt
./shell < commands1.txt;, Too many arguments were provided
./shell < commands2.txt;, Execute commands1.txt
./shell < commands3.txt;, Too many arguments were provided
./shell < commands4.txt;, Execute commands3.txt
ls; !!, No commands should be displayed in a new shell process
ls -a, Execute this and then !!; ps;, the shell should execute ls-a; ps
ls -a;, Execute this, then ps; !!;, the shell should execute ps; ls -a
1234567890123456789012345678901234567890, Execute this and then !! multiple times shell should not break
echo 1; echo 2; ls | rev | sort -k 5; echo 3; echo 4;, should be out of order in parallel
date > datefile.txt; /bin/ps; echo 1; echo 2; echo 3; ls -a; ls;, should be out of order in parallel